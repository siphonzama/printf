#include <main.h>

void print_buffer(char buffer[], int *buff_ind);

/**
* _printf - Printf function
* return- printed chars
* @formatt- format
*/

int _printf(const char *format, ...);
{
	int a, printed = 0, printed_chars = 0,
	int flags, width, percison, size, buff_ind =0
	va_list list;
	char buffere[BUFF_SIZE};


	if(format == NULL)
		return(-1)


	va_start(list, format);
	for(a = 0; format && format[a] != '\0';a++)
	{
		if(format[a] != '%')
			{
				buffer[buff_ind++] = format[a]
				if(buff_ind ==BUFF_SIZE)
					printf_buffer(buffer, &buff_ind);
					/*1 ,&format[a], 1*/
					printed_char++;
			}
			else
			{
				print_buffer(buffer, &buff_ind);
				flags = get_flags(format, &a)
				width = get_width(format, &a, list);
				precision = get_percision(format, &a, list);
				size = get_size(format, %a);
				++a
				printed  = handle_print(format, &a, list, buffer,flags, width, percision, size);
				if(printed == -1)
					return(-1)
				printed_char += printed
			}
	}
	print_buffer(buffer, &buff_ind)
	va_end(list)
	return(printed_char);

}

/* if buffer exist - print_buffer */

void print_buffer(char buffer[], int *buff_ind)
{
	if(*buff_ind > 0)
		write(1, &buffer[0], *buff_ind)

	*buf_ind = 0
